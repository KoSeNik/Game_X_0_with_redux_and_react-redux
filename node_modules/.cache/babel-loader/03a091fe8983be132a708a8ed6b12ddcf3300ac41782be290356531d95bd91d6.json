{"ast":null,"code":"var _jsxFileName = \"/home/komarov-sn@tehnoteh.local/result/React/9. State management. React Redux. Redux Thunk/1/src/game.js\",\n  _s = $RefreshSig$();\nimport { GameLayout } from \"./gameLayout\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectCurrentPlayer, selectIsGameEnded, selectIsDraw, selectField, selectWinningIndex } from \"./store/selectors\";\nimport { setPlayer, setIsGameEnded, setIsDraw, setField, setWinningIndex, resetGame } from \"./store/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Game = () => {\n  _s();\n  const currentPlayer = useSelector(selectCurrentPlayer);\n  const isGameEnded = useSelector(selectIsGameEnded);\n  const isDraw = useSelector(selectIsDraw);\n  const field = useSelector(selectField);\n  const winningIndex = useSelector(selectWinningIndex);\n  const dispatch = useDispatch();\n  const handleClickCell = index => {\n    if (field[index] === \"\" && isGameEnded === false) {\n      const nextField = field.slice();\n      nextField[index] = currentPlayer;\n      dispatch(setField(nextField));\n      checkDraw(nextField);\n      dispatch(setPlayer(currentPlayer === \"X\" ? \"O\" : \"X\"));\n      checkWinner(nextField);\n    }\n  };\n  const checkDraw = field => {\n    if (!field.includes(\"\") && isGameEnded !== true) dispatch(setIsDraw(true));\n  };\n  const checkWinner = field => {\n    const WIN_PATTERNS = [[0, 1, 2], [3, 4, 5], [6, 7, 8],\n    // Варианты побед по горизонтали\n    [0, 3, 6], [1, 4, 7], [2, 5, 8],\n    // Варианты побед по вертикали\n    [0, 4, 8], [2, 4, 6] // Варианты побед по диагонали\n    ];\n\n    for (let i = 0; i < WIN_PATTERNS.length; i++) {\n      const [a, b, c] = WIN_PATTERNS[i];\n      if (field[a] && field[a] === field[b] && field[a] === field[c]) {\n        dispatch(setIsGameEnded(true));\n        dispatch({\n          type: \"SET_PLAYER\",\n          payload: currentPlayer\n        });\n        dispatch({\n          type: \"SET_IS_DRAW\",\n          payload: false\n        });\n        dispatch({\n          type: \"SET_WINNING_INDEX\",\n          payload: WIN_PATTERNS[i]\n        });\n      }\n    }\n  };\n  const clickReset = () => {\n    dispatch({\n      type: \"RESET\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(GameLayout, {\n    currentPlayer: currentPlayer,\n    isGameEnded: isGameEnded,\n    isDraw: isDraw,\n    field: field,\n    handleClickCell: handleClickCell,\n    clickReset: clickReset,\n    winningIndex: winningIndex\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"ixa9orE7Azqgl/gCZYX69/DRgwQ=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["GameLayout","useSelector","useDispatch","selectCurrentPlayer","selectIsGameEnded","selectIsDraw","selectField","selectWinningIndex","setPlayer","setIsGameEnded","setIsDraw","setField","setWinningIndex","resetGame","jsxDEV","_jsxDEV","Game","_s","currentPlayer","isGameEnded","isDraw","field","winningIndex","dispatch","handleClickCell","index","nextField","slice","checkDraw","checkWinner","includes","WIN_PATTERNS","i","length","a","b","c","type","payload","clickReset","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/komarov-sn@tehnoteh.local/result/React/9. State management. React Redux. Redux Thunk/1/src/game.js"],"sourcesContent":["import { GameLayout } from \"./gameLayout\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectCurrentPlayer,\n  selectIsGameEnded,\n  selectIsDraw,\n  selectField,\n  selectWinningIndex,\n} from \"./store/selectors\";\n\nimport {\n  setPlayer,\n  setIsGameEnded,\n  setIsDraw,\n  setField,\n  setWinningIndex,\n  resetGame,\n} from \"./store/actions\";\n\nexport const Game = () => {\n  const currentPlayer = useSelector(selectCurrentPlayer);\n  const isGameEnded = useSelector(selectIsGameEnded);\n  const isDraw = useSelector(selectIsDraw);\n  const field = useSelector(selectField);\n  const winningIndex = useSelector(selectWinningIndex);\n\n  const dispatch = useDispatch();\n\n  const handleClickCell = (index) => {\n    if (field[index] === \"\" && isGameEnded === false) {\n      const nextField = field.slice();\n      nextField[index] = currentPlayer;\n      dispatch(setField(nextField));\n      checkDraw(nextField);\n      dispatch(setPlayer(currentPlayer === \"X\" ? \"O\" : \"X\"));\n      checkWinner(nextField);\n    }\n  };\n\n  const checkDraw = (field) => {\n    if (!field.includes(\"\") && isGameEnded !== true) dispatch(setIsDraw(true));\n  };\n\n  const checkWinner = (field) => {\n    const WIN_PATTERNS = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8], // Варианты побед по горизонтали\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8], // Варианты побед по вертикали\n      [0, 4, 8],\n      [2, 4, 6], // Варианты побед по диагонали\n    ];\n    for (let i = 0; i < WIN_PATTERNS.length; i++) {\n      const [a, b, c] = WIN_PATTERNS[i];\n      if (field[a] && field[a] === field[b] && field[a] === field[c]) {\n        dispatch(setIsGameEnded(true));\n        dispatch({ type: \"SET_PLAYER\", payload: currentPlayer });\n        dispatch({ type: \"SET_IS_DRAW\", payload: false });\n        dispatch({ type: \"SET_WINNING_INDEX\", payload: WIN_PATTERNS[i] });\n      }\n    }\n  };\n\n  const clickReset = () => {\n    dispatch({ type: \"RESET\" });\n  };\n\n  return (\n    <GameLayout\n      currentPlayer={currentPlayer}\n      isGameEnded={isGameEnded}\n      isDraw={isDraw}\n      field={field}\n      handleClickCell={handleClickCell}\n      clickReset={clickReset}\n      winningIndex={winningIndex}\n    />\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}