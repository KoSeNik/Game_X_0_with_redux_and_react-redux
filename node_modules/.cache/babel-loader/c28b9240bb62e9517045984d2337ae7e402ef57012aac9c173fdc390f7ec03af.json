{"ast":null,"code":"var _jsxFileName = \"/home/komarov-sn@tehnoteh.local/result/React/9. State management. React Redux. Redux Thunk/1/src/game.js\",\n  _s = $RefreshSig$();\nimport { GameLayout } from \"./gameLayout\";\nimport { useDispatch, useStore } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Game = () => {\n  _s();\n  //const state = useStore();\n  //const { currentPlayer, isGameEnded, isDraw, field, winningIndex } = state;\n\n  const currentPlayer = useSelector(state => state.currentPlayer);\n  //const age = useSelector((state) => state.user.age);\n\n  const dispatch = useDispatch();\n  const handleClickCell = index => {\n    if (field[index] === \"\" && isGameEnded === false) {\n      const nextField = field.slice();\n      nextField[index] = currentPlayer;\n      dispatch({\n        type: \"SET_FIELD\",\n        payload: nextField\n      });\n      checkDraw(nextField);\n      dispatch({\n        type: \"SET_PLAYER\",\n        payload: currentPlayer === \"X\" ? \"O\" : \"X\"\n      });\n      checkWinner(nextField);\n    }\n  };\n  const checkDraw = field => {\n    if (!field.includes(\"\") && isGameEnded !== true) dispatch({\n      type: \"SET_IS_DRAW\",\n      payload: true\n    });\n  };\n  const checkWinner = field => {\n    const WIN_PATTERNS = [[0, 1, 2], [3, 4, 5], [6, 7, 8],\n    // Варианты побед по горизонтали\n    [0, 3, 6], [1, 4, 7], [2, 5, 8],\n    // Варианты побед по вертикали\n    [0, 4, 8], [2, 4, 6] // Варианты побед по диагонали\n    ];\n\n    for (let i = 0; i < WIN_PATTERNS.length; i++) {\n      const [a, b, c] = WIN_PATTERNS[i];\n      if (field[a] && field[a] === field[b] && field[a] === field[c]) {\n        dispatch({\n          type: \"SET_IS_GAME_ENDED\",\n          payload: true\n        });\n        dispatch({\n          type: \"SET_PLAYER\",\n          payload: currentPlayer\n        });\n        dispatch({\n          type: \"SET_IS_DRAW\",\n          payload: false\n        });\n        dispatch({\n          type: \"SET_WINNING_INDEX\",\n          payload: WIN_PATTERNS[i]\n        });\n      }\n    }\n  };\n  const clickReset = () => {\n    dispatch({\n      type: \"RESET\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(GameLayout, {\n    currentPlayer: currentPlayer,\n    isGameEnded: isGameEnded,\n    isDraw: isDraw,\n    field: field,\n    handleClickCell: handleClickCell,\n    clickReset: clickReset,\n    winningIndex: winningIndex\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"7Qj85Lx2ZyFuIJqUPM5M0QsCMJY=\", true, function () {\n  return [useDispatch];\n});\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["GameLayout","useDispatch","useStore","jsxDEV","_jsxDEV","Game","_s","currentPlayer","useSelector","state","dispatch","handleClickCell","index","field","isGameEnded","nextField","slice","type","payload","checkDraw","checkWinner","includes","WIN_PATTERNS","i","length","a","b","c","clickReset","isDraw","winningIndex","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/komarov-sn@tehnoteh.local/result/React/9. State management. React Redux. Redux Thunk/1/src/game.js"],"sourcesContent":["import { GameLayout } from \"./gameLayout\";\nimport { useDispatch, useStore } from \"react-redux\";\n\nexport const Game = () => {\n  //const state = useStore();\n  //const { currentPlayer, isGameEnded, isDraw, field, winningIndex } = state;\n\n  const currentPlayer = useSelector((state) => state.currentPlayer);\n  //const age = useSelector((state) => state.user.age);\n\n  const dispatch = useDispatch();\n\n  const handleClickCell = (index) => {\n    if (field[index] === \"\" && isGameEnded === false) {\n      const nextField = field.slice();\n      nextField[index] = currentPlayer;\n      dispatch({ type: \"SET_FIELD\", payload: nextField });\n      checkDraw(nextField);\n      dispatch({\n        type: \"SET_PLAYER\",\n        payload: currentPlayer === \"X\" ? \"O\" : \"X\",\n      });\n      checkWinner(nextField);\n    }\n  };\n\n  const checkDraw = (field) => {\n    if (!field.includes(\"\") && isGameEnded !== true)\n      dispatch({ type: \"SET_IS_DRAW\", payload: true });\n  };\n\n  const checkWinner = (field) => {\n    const WIN_PATTERNS = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8], // Варианты побед по горизонтали\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8], // Варианты побед по вертикали\n      [0, 4, 8],\n      [2, 4, 6], // Варианты побед по диагонали\n    ];\n    for (let i = 0; i < WIN_PATTERNS.length; i++) {\n      const [a, b, c] = WIN_PATTERNS[i];\n      if (field[a] && field[a] === field[b] && field[a] === field[c]) {\n        dispatch({ type: \"SET_IS_GAME_ENDED\", payload: true });\n        dispatch({ type: \"SET_PLAYER\", payload: currentPlayer });\n        dispatch({ type: \"SET_IS_DRAW\", payload: false });\n        dispatch({ type: \"SET_WINNING_INDEX\", payload: WIN_PATTERNS[i] });\n      }\n    }\n  };\n\n  const clickReset = () => {\n    dispatch({ type: \"RESET\" });\n  };\n\n  return (\n    <GameLayout\n      currentPlayer={currentPlayer}\n      isGameEnded={isGameEnded}\n      isDraw={isDraw}\n      field={field}\n      handleClickCell={handleClickCell}\n      clickReset={clickReset}\n      winningIndex={winningIndex}\n    />\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}