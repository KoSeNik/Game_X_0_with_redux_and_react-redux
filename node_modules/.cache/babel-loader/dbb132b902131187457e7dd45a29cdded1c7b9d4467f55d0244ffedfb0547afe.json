{"ast":null,"code":"var _jsxFileName = \"/home/komarov-sn@tehnoteh.local/result/React/9. State management. React Redux. Redux Thunk/1/src/game.js\",\n  _s = $RefreshSig$();\nimport { GameLayout } from \"./gameLayout\";\nimport { useDispatch, useStore } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Game = () => {\n  _s();\n  const state = useStore();\n  const {\n    currentPlayer,\n    isGameEnded,\n    isDraw,\n    field,\n    winningIndex\n  } = state;\n  const urrentPlayer = useSelector(state => state.user.name);\n  const age = useSelector(state => state.user.age);\n  const dispatch = useDispatch();\n  const handleClickCell = index => {\n    if (field[index] === \"\" && isGameEnded === false) {\n      const nextField = field.slice();\n      nextField[index] = currentPlayer;\n      dispatch({\n        type: \"SET_FIELD\",\n        payload: nextField\n      });\n      checkDraw(nextField);\n      dispatch({\n        type: \"SET_PLAYER\",\n        payload: currentPlayer === \"X\" ? \"O\" : \"X\"\n      });\n      checkWinner(nextField);\n    }\n  };\n  const checkDraw = field => {\n    if (!field.includes(\"\") && isGameEnded !== true) dispatch({\n      type: \"SET_IS_DRAW\",\n      payload: true\n    });\n  };\n  const checkWinner = field => {\n    const WIN_PATTERNS = [[0, 1, 2], [3, 4, 5], [6, 7, 8],\n    // Варианты побед по горизонтали\n    [0, 3, 6], [1, 4, 7], [2, 5, 8],\n    // Варианты побед по вертикали\n    [0, 4, 8], [2, 4, 6] // Варианты побед по диагонали\n    ];\n\n    for (let i = 0; i < WIN_PATTERNS.length; i++) {\n      const [a, b, c] = WIN_PATTERNS[i];\n      if (field[a] && field[a] === field[b] && field[a] === field[c]) {\n        dispatch({\n          type: \"SET_IS_GAME_ENDED\",\n          payload: true\n        });\n        dispatch({\n          type: \"SET_PLAYER\",\n          payload: currentPlayer\n        });\n        dispatch({\n          type: \"SET_IS_DRAW\",\n          payload: false\n        });\n        dispatch({\n          type: \"SET_WINNING_INDEX\",\n          payload: WIN_PATTERNS[i]\n        });\n      }\n    }\n  };\n  const clickReset = () => {\n    dispatch({\n      type: \"RESET\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(GameLayout, {\n    currentPlayer: currentPlayer,\n    isGameEnded: isGameEnded,\n    isDraw: isDraw,\n    field: field,\n    handleClickCell: handleClickCell,\n    clickReset: clickReset,\n    winningIndex: winningIndex\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"U5gvz1VhvuGBG8hmdkdFFipzomo=\", true, function () {\n  return [useStore, useDispatch];\n});\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["GameLayout","useDispatch","useStore","jsxDEV","_jsxDEV","Game","_s","state","currentPlayer","isGameEnded","isDraw","field","winningIndex","urrentPlayer","useSelector","user","name","age","dispatch","handleClickCell","index","nextField","slice","type","payload","checkDraw","checkWinner","includes","WIN_PATTERNS","i","length","a","b","c","clickReset","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/komarov-sn@tehnoteh.local/result/React/9. State management. React Redux. Redux Thunk/1/src/game.js"],"sourcesContent":["import { GameLayout } from \"./gameLayout\";\nimport { useDispatch, useStore } from \"react-redux\";\n\nexport const Game = () => {\n  const state = useStore();\n  const { currentPlayer, isGameEnded, isDraw, field, winningIndex } = state;\n\n  const urrentPlayer = useSelector((state) => state.user.name);\n  const age = useSelector((state) => state.user.age);\n\n  const dispatch = useDispatch();\n\n  const handleClickCell = (index) => {\n    if (field[index] === \"\" && isGameEnded === false) {\n      const nextField = field.slice();\n      nextField[index] = currentPlayer;\n      dispatch({ type: \"SET_FIELD\", payload: nextField });\n      checkDraw(nextField);\n      dispatch({\n        type: \"SET_PLAYER\",\n        payload: currentPlayer === \"X\" ? \"O\" : \"X\",\n      });\n      checkWinner(nextField);\n    }\n  };\n\n  const checkDraw = (field) => {\n    if (!field.includes(\"\") && isGameEnded !== true)\n      dispatch({ type: \"SET_IS_DRAW\", payload: true });\n  };\n\n  const checkWinner = (field) => {\n    const WIN_PATTERNS = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8], // Варианты побед по горизонтали\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8], // Варианты побед по вертикали\n      [0, 4, 8],\n      [2, 4, 6], // Варианты побед по диагонали\n    ];\n    for (let i = 0; i < WIN_PATTERNS.length; i++) {\n      const [a, b, c] = WIN_PATTERNS[i];\n      if (field[a] && field[a] === field[b] && field[a] === field[c]) {\n        dispatch({ type: \"SET_IS_GAME_ENDED\", payload: true });\n        dispatch({ type: \"SET_PLAYER\", payload: currentPlayer });\n        dispatch({ type: \"SET_IS_DRAW\", payload: false });\n        dispatch({ type: \"SET_WINNING_INDEX\", payload: WIN_PATTERNS[i] });\n      }\n    }\n  };\n\n  const clickReset = () => {\n    dispatch({ type: \"RESET\" });\n  };\n\n  return (\n    <GameLayout\n      currentPlayer={currentPlayer}\n      isGameEnded={isGameEnded}\n      isDraw={isDraw}\n      field={field}\n      handleClickCell={handleClickCell}\n      clickReset={clickReset}\n      winningIndex={winningIndex}\n    />\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}